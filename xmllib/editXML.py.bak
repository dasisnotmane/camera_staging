import xml.etree.ElementTree as Et
import sys
import logging 

def logging_config():

    # create logger
    logger = logging.getLogger('simple_example')
    logger.setLevel(logging.DEBUG)

    # create console handler and set level to debug
    ch = logging.StreamHandler()
    ch.setLevel(logging.DEBUG)

    # create formatter
    formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')

    # add formatter to ch
    ch.setFormatter(formatter)

    # add ch to logger
    logger.addHandler(ch)

    # 'application' code
    logger.debug('debug message')
    logger.info('info message')
    logger.warn('warn message')
    logger.error('error message')
    logger.critical('critical message')



#takes a xml file and returns a tree obj
def Et_xml_obj(xml_file):
   root = Et.parse(xml_file)
   return root.getroot()

# takes a tree obj and xml tag 
# looks if that tag is present in the xml tree 

def search_by_tag(tree_xml_obj,tag):

   for element in tree_xml_obj.iter():
       if element.tag == tag:
            print (element.tag,element.text)
            return element 
   print("tag was not found")

   return None

# using the specific tree element 
# edit that value for that element
def edit_by_tag(element,value):
   
    element.text = value
    return element

# write the string to the file 
def write_tree_to_file(xml_file,tree_str):

    with open(xml_file, "w") as f : 
        f.write(tree_str)

#takes a xml file , tag and value 
#edit the file and rewrite it  
def edit_xml(xml_file,tag,value):

    root = Et_xml_obj(xml_file)
    element = search_by_tag(root,tag)
    edit_by_tag(element,value)

    root_string = Et.tostring(root,'utf-8')
    print("{}....editing..{} to {}".format(xml_file,tag,value) )

    try: 
        write_tree_to_file(xml_file,root_string )
        print("SUCCESS") 
    except Exception as e  : 
        print("failed to edit,,,{}".format(xml_file))
        sys.strout.write(e)
    
#edit_xml("./config_files/gsm.xml","gsm_apn_provider","nice")
'''
root = Et_xml_obj('appt.xml')
element = search_by_tag(root,"duration")
edit_by_tag(element,"2000")

root_string = Et.tostring(root,'utf-8')
print(root_string)

write_tree_to_file(root_string )
'''
